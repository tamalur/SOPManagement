@model SOPManagement.Models.SOPClass

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

@{
    ViewBag.Title = "SOP Administration";
}


@using (Html.BeginForm("AdminSOP", "Home", FormMethod.Post, new { @id = "Form1" }))
{

    @Html.AntiForgeryToken()

    <style>
        table {
            border-collapse: collapse;
            width: 60%;
        }

        tr.no-bottom-border td {
            border-bottom: none
        }
    </style>
    <div>


        <p>
            <table>

                <tr>
                    <td class="signoffield">

                        @Html.DisplayNameFor(model => model.FileTitle)

                    </td>
                    <td>
                        @Model.FileTitle
                    </td>
                </tr>

                <tr>
                    <td class="signoffield">
                        @Html.DisplayNameFor(model => model.SOPNo)
                    </td>
                    <td>
                        @Model.SOPNo
                    </td>
                </tr>

                <tr>
                    <td class="signoffield">
                        @Html.DisplayNameFor(model => model.FileUrl)
                    </td>
                    <td>
                        <a href="@Model.FileLink" target="_blank">@Model.FileTitle</a>
                    </td>
                </tr>

                <tr>
                    <td class="signoffield">
                        @Html.DisplayNameFor(model => model.FilePath)
                    </td>
                    <td>
                        @Model.FilePath
                    </td>
                </tr>

                <tr>
                    <td class="signoffield">
                        @Html.DisplayNameFor(model => model.ApprovalStatus)
                    </td>
                    <td>
                        @Model.ApprovalStatus
                    </td>
                </tr>



            </table>
        </p>


        <p>

            <table>
                <tr>
                    <td class="signoffield">
                        @Html.LabelFor(model => model.Updatefreq)

                    </td>
                    <td>
                        @Html.EditorFor(model => model.Updatefreq, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updatefreq, "", new { @class = "text-danger" })

                    </td>

                </tr>

                <tr>
                    <td class="signoffield">
                        @Html.LabelFor(model => model.Updatefrequnit)

                    </td>

                    <td>
                        @if (ViewBag.updfrequnits != null)
                        {
                            @Html.DropDownListFor(model => model.Updfrequnitcode, new SelectList(ViewBag.updfrequnits, "unitcode", "Unitname", 1), "Please select freq. unit", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Updfrequnitcode, "", new { @class = "text-danger" })
                        }


                    </td>
                </tr>


            </table>
        </p>

        <p>

            <table>
                <tr>
                    <td class="signoffield">
                        SOP Owner
                    </td>

                </tr>

                <tr>
                    <td>

                        @Html.DropDownListFor(model => model.FileOwnerEmail, new SelectList(ViewBag.employees, "useremailaddress", "userfullname"), "Please select SOP owner", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FileOwnerEmail, "", new { @class = "text-danger" })


                    </td>

                </tr>

            </table>
        </p>

        <p>

            <table>
                <tr>
                    <td class="signoffield">
                        SOP Approver
                    </td>

                </tr>

                <tr>
                    <td>

                        @Html.DropDownListFor(model => model.FileApproverEmail, new SelectList(ViewBag.employees, "useremailaddress", "userfullname"), "Please select SOP approver", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FileApproverEmail, "", new { @class = "text-danger" })


                    </td>

                </tr>

            </table>
        </p>


        <p>

            <table>

                <tr class="no-bottom-border" id="revhrow">
                    <td class="signoffield">
                        SOP Reviewers
                    </td>

                </tr>
            </table>

            <table id="tblReviewers">
                <thead>


                    <tr>

                        <th>Full Name</th>

                        <th>Email</th>

                        <th></th>

                    </tr>

                </thead>

                <tbody>

                    @using (var db = new SOPManagement.Models.RadiantSOPEntities())
                    {

                        foreach (var usr in db.vwSOPReviewers.Where(x => x.fileid == Model.FileID))

                        {

                            <tr>

                                <td> @usr.userfullname </td>

                                <td> @usr.useremailaddress </td>

                                @*<td> @usr.jobtitle </td>*@

                                <td><input type="button" value="Remove" onclick="Remove(this,'#tblReviewers')" /></td>



                            </tr>

                        }
                    }

                </tbody>

                <tfoot>

                    <tr>

                        <td>

                            @Html.DropDownList("userid", new SelectList(ViewBag.employees, "useremailaddress", "userfullname"), "Please select a reviewer", new { @id = "ddlEmployees" })
                        </td>




                        <td><input type="button" id="btnAddRvwer" value="Add" /></td>

                    </tr>

                </tfoot>

            </table>



        </p>

        <p>

            <table>

                <tr class="no-bottom-border" id="revhrow">
                    <td class="signoffield">
                        Read Accesss to
                    </td>

                </tr>
            </table>


            <table>

                <tr>
                    <td class="signoffield">

                        @Html.DisplayNameFor(model => model.AllUsersReadAcc)

                    </td>

                    <td>

                        @Html.CheckBoxFor(model => model.AllUsersReadAcc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AllUsersReadAcc, "", new { @class = "text-danger" })


                    </td>

                </tr>

                <tr>
                    <td class="signoffield">

                        @Html.DisplayNameFor(model => model.DepartmentName)

                    </td>

                    <td>

                        @Html.DropDownListFor(model => model.DepartmentCode, new SelectList(ViewBag.departments, "sopdeptcode", "sopdeptname"), "Select a department", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.DepartmentCode, "", new { @class = "text-danger" })


                    </td>

                </tr>


                <tr>
                    <td class="signoffield">

                        @Html.DisplayNameFor(model => model.FileViewers)

                    </td>

                    <td>

                        <table id="tblViewers" style="width:50%">

                            <thead>

                                <tr>

                                    <th>Full Name</th>

                                    <th>Email</th>

                                    <th></th>

                                </tr>

                            </thead>

                            <tbody>

                                @using (var db = new SOPManagement.Models.RadiantSOPEntities())
                                {

                                    foreach (var usr in db.vwSOPViewers.Where(x => x.fileid == Model.FileID))

                                    {


                                        <tr>

                                            <td> @usr.userfullname </td>

                                            <td> @usr.useremailaddress </td>

                                            @*<td> @usr.jobtitle </td>*@

                                            <td><input type="button" value="Remove" onclick="Remove(this,'#tblViewers')" /></td>



                                        </tr>

                                    }
                                }

                            </tbody>

                            <tfoot>

                                <tr>

                                    <td>

                                        @Html.DropDownList("userid", new SelectList(ViewBag.employees, "useremailaddress", "userfullname"), "Please select a viewer", new { @id = "ddlViewers" })
                                    </td>

                                    <td><input type="button" id="btnAddVwer" value="Add" /></td>

                                </tr>

                            </tfoot>

                        </table>


                    </td>

                </tr>



            </table>


        </p>

   </div>


}

    <div>

        <p>

            <table>

                <tr>
                    <td style="text-align:center">

                        @using (Html.BeginForm("AdminSOP", "Home", FormMethod.Post, new { @id = "Form2" }))
                        {
                            <input type="submit" value="Archive" name="archive" id="soparchive" />
                        }
                    </td>
                    <td style="text-align:center">
                        <input value="Submit Changes" type="submit" onclick="confirmsave();"  name="save" id="sopsubmit" />
                    </td>
                </tr>

            </table>
        </p>

    </div>

    <div class="submit-progress hidden" id="progessdiv">
        <img src="~/Content/Images/soploading.gif" style="width:55px;height:55px" />
        @*<i class="fa fa-2x fa-spinner fa-spin"></i>
        <label>Please wait while submitting SOP...</label>*@
        <label>Please wait while submitting SOP...</label>
    </div>


<script src="~/Scripts/jquery-3.3.1.min.js"></script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

<script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>


<script src="~/Scripts/SOP.js"></script>

<script>


    $("body").on("submit", "#Form2", function () {
        return confirm("Are you sure you want to archive this SOP?");
    });




    function confirmsave() {

        var answer = window.confirm("Are you sure to change all SOP admin data?")
        if (answer) {


            submitchanges();

            return false;
        }
        else {

            return true;
        }
    }


    function submitchanges()
    {

        //validate data entry


        var updfreq = $('#Updatefreq').val();


        if (updfreq == "" || updfreq <= 0 ) {
            alert("Update frequency is required!")
            return true;
        }

        if (updfreq != "" && isNaN(updfreq) == true) {
            alert("Update frequency must be numeric!")
            return true;

        }

        var upfrequnit = $('#Updfrequnitcode :selected').text();
        var updfrequcode = $('#Updfrequnitcode :selected').val();
        
  
        if (upfrequnit == "Please select freq. unit" || upfrequnit == "") {
            alert("Update frequency unit is required!")
            return true;
        }

        var owneremail = $('#FileOwnerEmail :selected').val();

        // var owneremail = $('[id$=FileOwnerEmail] option:selected').val();  //it also works


        if (owneremail == "") {
            alert("SOP Owner is required!")
            return true;

        }

        var apporveremail = $('#FileApproverEmail :selected').val();


        if (apporveremail == "") {
            alert("SOP Approver is required!")
            return true;

        }



        //validate and collect data from Reviewers and viewers table


        //collect reviewers and viewers from html tables in javascript array

        var reviewerarr = new Array();

        //Loop through the Table rows and build a reviewers JSON array.

        $("#tblReviewers TBODY TR").each(function () {

            var row = $(this);

            var reviewer = {};

            reviewer.userfullname = row.find("TD").eq(0).html();

            reviewer.useremailaddress = row.find("TD").eq(1).html();

            reviewerarr.push(reviewer);


        });

        if (reviewerarr === undefined || reviewerarr.length == 0) {
            // array empty or does not exist
            alert("Reviewers are required, plesae add at least one reviewer!");
            return true;
        }

        var rvwrarr = JSON.stringify(reviewerarr);   //this is json data of array to pass to controller through ajax call

        //get view/read access fields

        var chkAllVwrs = document.getElementById("AllUsersReadAcc").checked;

        var vwrdeptcode = $('#DepartmentCode :selected').val();

        //Loop through the viewers Table rows and build a viewers JSON array.

        var viewersarr = new Array();

        $("#tblViewers TBODY TR").each(function () {

            var row = $(this);

            var viewer = {};

            viewer.userfullname = row.find("TD").eq(0).html();

            viewer.useremailaddress = row.find("TD").eq(1).html();

            viewersarr.push(viewer);


        });

        if (chkAllVwrs == false) {

            if (vwrdeptcode == "" && (viewersarr === undefined || viewersarr.length == 0)) {
                // array empty or does not exist
                alert("Plesae enter at least one viewer with read access!");
                return true;
            }


        }

        var vwrarr = JSON.stringify(viewersarr);  //send json data to controller


        DisplayProgressMessage(document.getElementById('sopsubmit'), "Processing SOP");

         //submit reviewers, viewers etc. to controler through ajax 

           // confirmsave();

            var sop = new FormData();   //to send uploaded file bytes we need to use javascript Formdata object

            sop.append("Updatefreq", updfreq);
            sop.append("Updatefrequnit", upfrequnit);
            sop.append("Updfrequnitcode", updfrequcode);
            sop.append("FileOwnerEmail", owneremail);
            sop.append("FileApproverEmail", apporveremail);
            sop.append("FilereviewersArr", rvwrarr);
            sop.append("AllUsersReadAcc", chkAllVwrs);
            sop.append("DepartmentCode", vwrdeptcode);
            sop.append("FileviewersArr", vwrarr);




            $.ajax({
                type: "POST",
                url: "/Home/AdminSOP",
                //data: '{sop: ' + JSON.stringify(sop) + '}',
                data: sop,
                //contentType: "application/json; charset=utf-8",

                processData: false, //send through body, do not want jQuery to automatically convert the data to a query string so I'm setting processData to false.

                contentType: false,  //content type is data type sending from client. It is false for sending file stream to upload file with other form data

                dataType: "json",     //data type that we expect from server
                success: function (response) {  //server sends OK 200 response to the client

                    if (response.redirecturl != null && response.redirecturl != "")  
                        window.location.href = response.redirecturl;
                    else {  
                        //json field with success and responseText field
                        //alert(response.success has two values success or failure that I did not check here as I have error message in session);
                        //alert(response.responseText)
 
                        @*window.location.href = '@Url.Action("SOPMessage", "Home")/' + id;*@

                        if (response.success == false && response.responseText == "sessiontimeout")
                            window.location.href = '@Url.Action("logIn", "Home")';

                         else 
                            window.location.href = '@Url.Action("SOPMessage", "Home")';

                    }
                },
                failure: function (response) {     // Server errors (500–599). when failed to send desired response
                 //  alert("Server Response Error:"+response.responseText);
                    window.location.href = '@Url.Action("CleintServerErr", "Home")';

                },

                error: function (response) {      //Client errors (400–499) i.e. uploaded file is too big more than 20 MB permitted in web.cofig

                    //Codes other than Http Success codes(200[OK]) will trigger the function in front of error: in client side(ajax).

                    window.location.href = '@Url.Action("CleintServerErr", "Home")';
                  
                }


            });



    }


    function DisplayProgressMessage(ctl, msg) {

        $(ctl).prop("disabled", true).text(msg);
        $(".submit-progress").removeClass("hidden");
        $("body").addClass("submit-progress-bg");
        setTimeout(function () {
            $(".submit-progress").removeClass("hidden");
        }, 1);

        return true;
    }



</script>