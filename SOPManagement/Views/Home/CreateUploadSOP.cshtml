@model SOPManagement.Models.SOPClass


@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Upload or Create SOP</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.UploadedFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UploadedFile, null, new { type = "file", @class = "input-file" })
        </div>
    </div>

    <div class="form-group">

        @*@HtmlFor.Label(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("New File Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })


        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.FolderName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @*@Html.EditorFor(model => model.FolderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FolderName, "", new { @class = "text-danger" })*@

            @if (ViewBag.ddlDeptFolders != null)
            {
                @Html.DropDownListFor(model => model.FolderName, ViewBag.ddlDeptFolders as SelectList, "Please select a folder", new { @class = "form-control" })
            }


        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.SubFolderName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @*@Html.EditorFor(model => model.SubFolderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubFolderName, "", new { @class = "text-danger" })*@

            @Html.DropDownListFor(model => model.SubFolderName, new SelectList(""), "Please select a subfolder", new { @class = "form-control" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SOPNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SOPNo, new { htmlAttributes = new { @class = "form-control",@id = "newsopno" } })
            @Html.ValidationMessageFor(model => model.SOPNo, "", new { @class = "text-danger" })
        </div>
    </div> 

    <div class="form-group">
        @Html.LabelFor(model => model.FileID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileStatuscode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileStatuscode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileStatuscode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileOwnerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileOwnerEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileOwnerEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileOwnerID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileOwnerID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileOwnerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileChangeRqsterID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileChangeRqsterID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileChangeRqsterID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileChangeRqstID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileChangeRqstID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileChangeRqstID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileApproverID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileApproverID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileApproverID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileApproverEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileApproverEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileApproverEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileTitle, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DepartmentCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DepartmentCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DepartmentCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ViewAccessType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ViewAccessType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ViewAccessType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ViewAccessTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ViewAccessTypeID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ViewAccessTypeID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileCurrVersion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileCurrVersion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileCurrVersion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Updatefreq, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Updatefreq, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Updatefreq, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Updatefrequnit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Updatefrequnit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Updatefrequnit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileLink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileLink, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileLink, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OperationSuccess, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.OperationSuccess)
                @Html.ValidationMessageFor(model => model.OperationSuccess, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DocumentLibName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DocumentLibName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DocumentLibName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SiteUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SiteUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SiteUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SOPEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SOPEffectiveDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SOPEffectiveDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileUploaded, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.FileUploaded)
                @Html.ValidationMessageFor(model => model.FileUploaded, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ErrorMessage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ErrorMessage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ErrorMessage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>




<script src="~/Scripts/jquery-3.3.1.min.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

<script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>


<script>


    $(document).ready(function () {


        $("#FolderName").change(function () {

            var ifoldername = $(this).val();

            $.ajax(
                {

                    type: "post",
                    url: "/Home/GetSubFolderList?foldername=" + ifoldername,
                    contentType: "html",
                    success: function (response) {
                        //  debugger
                        $("#SubFolderName").empty();
                        $("#SubFolderName").append(response);

                    }  //end success

                })    //end ajax call function for getting subfolders by selected folder


            $.ajax(
                {

                   type: "post",
                    url: "/Home/GetSOPNO",
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify({ foldername: ifoldername, subfoldername: "" }),

                        success: function (data) {
                            //  debugger
                            if (data.success) {

                              //  document.getElementById("newsopno").value = data.sopno;


                                var n1 = ifoldername.indexOf("(");

                                var n2 = ifoldername.indexOf(")");

               
                                var sopcode = ifoldername.substring(n1 + 1, n2);

                                var currsopno = parseInt(data.sopno) + 1;

                                newsopno = sopcode + "-" + zeroPad(currsopno, 2);
                                document.getElementById("newsopno").value = newsopno;


                            }
                            else {
                                alert('invalid SOP' + data.success);
                            }
                        }
                    })  //end ajax call for getting new SOPNo by folder name

        })   //end folder change function

        $("#SubFolderName").change(function () {

            var ifoldername = $('#FolderName :selected').text()
            var isubfoldername = $('#SubFolderName :selected').text();

            $.ajax(
                {
                    type: "post",
                    url: "/Home/GetSOPNO",
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify({ foldername: ifoldername, subfoldername: isubfoldername }),

                    success: function (data) {
                        //  debugger

                        if (data.success) {

                            var n1 = isubfoldername.indexOf("(");

                            var n2 = isubfoldername.indexOf(")");

                            var sopcode = isubfoldername.substring(n1 + 1, n2);

                            var currsopno = parseInt(data.sopno) + 1;

                            newsopno = sopcode + "-" + zeroPad(currsopno, 2);
                            document.getElementById("newsopno").value = newsopno;

                        }
                        else {
                            alert('invalid SOP' + data.success);
                        }

                    }  //end success
                }) //end ajax call to get new sopno by subfolder



        })  //end Change event of sunfolder to get new sop no 

    });    //end document.ready function


    function zeroPad(num, places) {
        var zero = places - num.toString().length + 1;
        return Array(+(zero > 0 && zero)).join("0") + num;
    }

</script>