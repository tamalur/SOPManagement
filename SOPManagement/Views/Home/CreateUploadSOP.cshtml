@model SOPManagement.Models.SOPClass


@using (Html.BeginForm("CreateUploadSOP", "Home", FormMethod.Post))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Upload or Create SOP</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.UploadedFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UploadedFile, null, new { type = "file", @class = "input-file" })
        </div>
    </div>

    <div class="form-group">

        @*@HtmlFor.Label(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("New File Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })


        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.FolderName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @*@Html.EditorFor(model => model.FolderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FolderName, "", new { @class = "text-danger" })*@

            @if (ViewBag.ddlDeptFolders != null)
            {
                @Html.DropDownListFor(model => model.FolderName, ViewBag.ddlDeptFolders as SelectList, "Please select a folder", new { @class = "form-control" })
            }


        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.SubFolderName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @*@Html.EditorFor(model => model.SubFolderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubFolderName, "", new { @class = "text-danger" })*@

            @Html.DropDownListFor(model => model.SubFolderName, new SelectList(""), "Please select a subfolder", new { @class = "form-control" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SOPNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SOPNo, new { htmlAttributes = new { @class = "form-control", @id = "newsopno" } })
            @Html.ValidationMessageFor(model => model.SOPNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SOPEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SOPEffectiveDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.SOPEffectiveDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Updatefreq, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Updatefreq, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Updatefreq, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.Updatefrequnit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Updatefrequnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Updatefrequnit, "", new { @class = "text-danger" })*@


            @if (ViewBag.updfrequnits != null)
            {
                @Html.DropDownListFor(model => model.Updatefrequnit, new SelectList(ViewBag.updfrequnits, "unitcode", "Unitname"), "Please select freq. unit", new { @class = "form-control", @id = "ddlUpdFreqUnit" })
            }

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileOwnerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.FileOwnerEmail, new { htmlAttributes = new { @class = "form-control" } })*@

            @Html.DropDownListFor(model => model.Updatefrequnit, new SelectList(ViewBag.employees, "useremailaddress", "userfullname"), "Please select owner", new { @class = "form-control", @id = "ddlSOPOwners" })
            @Html.ValidationMessageFor(model => model.FileOwnerEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileApproverEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FileApproverEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FileApproverEmail, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">

        @Html.Label("Add Reviewers", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <table id="tblReviewers" class="table" cellpadding="0" cellspacing="0">

                <thead>

                    <tr>

                        <th style="width:150px">Full Name</th>

                        <th style="width:150px">Email</th>

                        @*<th style="width:150px">Job Title</th>*@

                        <th></th>

                    </tr>

                </thead>

                <tbody>

                    @using (var db = new SOPManagement.Models.RadiantSOPEntities())
                    {

                        foreach (var usr in db.vwSOPReviewers.Where(x => x.fileid == -1))

                        {
                            //  if (usr.fileid == 63)

                            // {


                            <tr>

                                <td> @usr.userfullname </td>

                                <td> @usr.useremailaddress </td>

                                @*<td> @usr.jobtitle </td>*@

                                <td><input type="button" value="Remove" onclick="Remove(this,'#tblReviewers')" /></td>



                            </tr>
                            //   }

                        }
                    }

                </tbody>

                <tfoot>

                    <tr>

                        <td>

                            @Html.DropDownList("userid", new SelectList(ViewBag.employees, "useremailaddress", "userfullname"), "Please select", new { @id = "ddlEmployees" })
                        </td>




                        <td colspan="2"><input type="button" id="btnAddRvwer" value="Add" /></td>

                    </tr>

                </tfoot>

            </table>

        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
        </div>
    </div>

 
    <div class="form-group">
        @Html.LabelFor(model => model.ViewAccessType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ViewAccessType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ViewAccessType, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" id="btnSubmit" onclick="submit();" class="btn btn-default" />
        </div>
    </div>
</div>
    }


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

<div><button onclick="submit()">Submit Form</button></div>

    @*javascript codes*@

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")


    }

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>


    <script>


        $(document).ready(function () {


            $("#FolderName").change(function () {

                var ifoldername = $(this).val();

                $.ajax(
                    {

                        type: "post",
                        url: "/Home/GetSubFolderList?foldername=" + ifoldername,
                        contentType: "html",
                        success: function (response) {
                            //  debugger
                            $("#SubFolderName").empty();
                            $("#SubFolderName").append(response);

                        }  //end success

                    })    //end ajax call function for getting subfolders by selected folder


                $.ajax(
                    {

                        type: "post",
                        url: "/Home/GetSOPNO",
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify({ foldername: ifoldername, subfoldername: "" }),

                        success: function (data) {
                            //  debugger
                            if (data.success) {

                                //  document.getElementById("newsopno").value = data.sopno;


                                var n1 = ifoldername.indexOf("(");

                                var n2 = ifoldername.indexOf(")");


                                var sopcode = ifoldername.substring(n1 + 1, n2);

                                var currsopno = parseInt(data.sopno) + 1;

                                newsopno = sopcode + "-" + zeroPad(currsopno, 2);
                                document.getElementById("newsopno").value = newsopno;


                            }
                            else {
                                alert('invalid SOP' + data.success);
                            }
                        }
                    })  //end ajax call for getting new SOPNo by folder name

            })   //end folder change function

            $("#SubFolderName").change(function () {

                var ifoldername = $('#FolderName :selected').text()
                var isubfoldername = $('#SubFolderName :selected').text();

                $.ajax(
                    {
                        type: "post",
                        url: "/Home/GetSOPNO",
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify({ foldername: ifoldername, subfoldername: isubfoldername }),

                        success: function (data) {
                            //  debugger

                            if (data.success) {

                                var n1 = isubfoldername.indexOf("(");

                                var n2 = isubfoldername.indexOf(")");

                                var sopcode = isubfoldername.substring(n1 + 1, n2);

                                var currsopno = parseInt(data.sopno) + 1;

                                newsopno = sopcode + "-" + zeroPad(currsopno, 2);
                                document.getElementById("newsopno").value = newsopno;

                            }
                            else {
                                alert('invalid SOP' + data.success);
                            }

                        }  //end success
                    }) //end ajax call to get new sopno by subfolder



            })  //end Change event of sunfolder to get new sop no

        });    //end document.ready function


        function zeroPad(num, places) {
            var zero = places - num.toString().length + 1;
            return Array(+(zero > 0 && zero)).join("0") + num;
        }



        $("body").on("click", "#btnAddRvwer", function () {


            //Get the reference of the Table's TBODY element.

            var tBody = $("#tblReviewers > TBODY")[0];


            var eml = $('#ddlEmployees').val();

            var f = searchtable(eml, 'tblReviewers');


            if (f != '') {

                alert('already added');
                return;

            }

            //Add Row.

            var row = tBody.insertRow(-1);



            //Add Name cell.

            var cell = $(row.insertCell(-1));


            cell.html($('#ddlEmployees :selected').text());


            //Add Country cell.

            cell = $(row.insertCell(-1));

            //cell.html(txtEmail.val());

            cell.html($('#ddlEmployees').val());



            //Add Button cell.

            cell = $(row.insertCell(-1));

            var btnRemoveRvr = $("<input />");

            btnRemoveRvr.attr("type", "button");

            btnRemoveRvr.attr("onclick", "Remove(this,'#tblReviewers');");

            btnRemoveRvr.val("Remove");

            cell.append(btnRemoveRvr);


        });


        $("body").on("click", "#btnAddUser", function () {

            //Reference the Name and Country TextBoxes.


            var txtName = $("#txtName");

            var txtEmail = $("#txtEmail");

            var txtEmail = $('#ddlViewers').val();


            //To get the currently selected text:
            // $('#dropDownId :selected').text();



            //Get the reference of the Table's TBODY element.

            var tBody = $("#tblViewers > TBODY")[0];


            var eml = $('#ddlViewers').val();

            var f = searchtable(eml, 'tblViewers');


            //alert(f);

            // document.getElementById("ddlEmployees").contains(eml);

            if (f != '') {

                alert('already added');
                return;

            }

            //Add Row.

            var row = tBody.insertRow(-1);



            //Add Name cell.

            var cell = $(row.insertCell(-1));

            //cell.html(txtName.val());

            cell.html($('#ddlViewers :selected').text());

            //$('#ddlEmployees :selected').text();



            //Add Country cell.

            cell = $(row.insertCell(-1));

            //cell.html(txtEmail.val());

            cell.html($('#ddlViewers').val());



            //Add Button cell.

            cell = $(row.insertCell(-1));

            var btnRemoveVwr = $("<input />");

            btnRemoveVwr.attr("type", "button");

            //btnRemove.attr("onclick", "Remove(this);");
            btnRemoveVwr.attr("onclick", "Remove(this,'#tblViewers');");

            btnRemoveVwr.val("Remove");

            cell.append(btnRemoveVwr);



            //Clear the TextBoxes.

            txtName.val("");

            // txtEmail.val("");famnb1932


        });


        function searchtable(eml, tblname) {

            var tab = document.getElementById(tblname);
            var l = tab.rows.length;
            var s = '';
            for (var i = 0; i < l; i++) {
                var tr = tab.rows[i];
                var cll = tr.cells[1];

                if (cll.innerText.indexOf(eml) != -1) {
                    //document.write(i + 1);

                    s = 'found';
                    break;
                }
            }

            return s;

        }

         function Remove(button, tableid) {

            //Determine the reference of the Row using the Button.

            window.clearTimeout(window.timeoutHandle);
            window.timeoutHandle = window.setTimeout("SessionEnd()", window.sTimeout);

            var row = $(button).closest("TR");

            var name = $("TD", row).eq(0).html();

            if (confirm("Do you want to delete: " + name)) {

                //Get the reference of the Table.

                // var table = $("#tblReviewers")[0];

                var table = $(tableid)[0];



                //Delete the Table row using it's Index.

                table.deleteRow(row[0].rowIndex);

            }

        };




        $("body").on("click", "#btnSubmit", function () {


            //Send the JSON array and other data to Controller using AJAX.


            var reviewerarr = new Array();

            var viewersarr = new Array();

            //Loop through the Table rows and build a JSON array.

            //$("#tblReviewers TBODY TR").each(function () {

            //    var row = $(this);

            //    var reviewer = {};

            //    reviewer.userfullname = row.find("TD").eq(0).html();

            //    reviewer.useremailaddress = row.find("TD").eq(1).html();

            //    reviewerarr.push(reviewer);


            //});


            $("#tblViewers TBODY TR").each(function () {

                var row = $(this);

                var viewer = {};

                viewer.userfullname = row.find("TD").eq(0).html();

                viewer.useremailaddress = row.find("TD").eq(1).html();

                viewersarr.push(viewer);


            });


  
            var formData = new FormData();

            var rvwrarr = JSON.stringify(reviewerarr);

            var vwrarr = JSON.stringify(viewersarr);

            
            //Upon success of the first request to upload file or create file, initiate the second request to process the uploaded file

         //   submit(rvwrarr);


        });



        function submit() {

            var reviewerarr = new Array();

            var viewersarr = new Array();

            //Loop through the Table rows and build a JSON array.

            $("#tblReviewers TBODY TR").each(function () {

                var row = $(this);

                var reviewer = {};

                reviewer.userfullname = row.find("TD").eq(0).html();

                reviewer.useremailaddress = row.find("TD").eq(1).html();

                reviewerarr.push(reviewer);


            });

            var rvwrarr = JSON.stringify(reviewerarr);

            alert(rvwrarr);
            alert($('#newsopno').val());

            var data = {

                FileCurrVersion: $('#newsopno').val(),
                FilereviewersArr: rvwrarr

            };

            alert(data);

            

            $.post("/Home/CreateUploadSOP", { sop: data }, function () { alert('Successfully Saved') });
        }
    </script>
